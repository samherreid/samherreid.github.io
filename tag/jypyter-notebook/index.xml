<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jypyter Notebook | Sam Herreid</title><link>https://samherreid.github.io/tag/jypyter-notebook/</link><atom:link href="https://samherreid.github.io/tag/jypyter-notebook/index.xml" rel="self" type="application/rss+xml"/><description>Jypyter Notebook</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Tue, 27 Apr 2010 00:00:00 +0000</lastBuildDate><image><url>https://samherreid.github.io/media/icon_hu4111fabdab116352ce8a62ad911042e7_28769_512x512_fill_lanczos_center_3.png</url><title>Jypyter Notebook</title><link>https://samherreid.github.io/tag/jypyter-notebook/</link></image><item><title>See-G(IS code)</title><link>https://samherreid.github.io/project/seeg/</link><pubDate>Tue, 27 Apr 2010 00:00:00 +0000</pubDate><guid>https://samherreid.github.io/project/seeg/</guid><description>&lt;img src="johnsonMethod.gif" width="2000" height="2000" Caption = "hello"/>
&lt;p>GIS-based research is a perfect medium for visual learners, however, as your analysis becomes more sophisticated you might end up using a strictly programming environment. In the process of writing a method only with code, a visual learner might miss seeing what is actually happening. See-G(IS code) is a tool to see your method in action and possibly identify redundancies. After defining directories&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">baseMap&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">r&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="c1"># .shp (optional)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">arcGisProject&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">r&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="c1"># .aprx&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">frameFolderPath&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">r&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>importing the required packages&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">arcpy&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">sys&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">inspect&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">currentframe&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># See-G local&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">config&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">mod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">useSeeG&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;yes&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>and calling some arcpy function&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">arcpy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">someFunction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>all you have to do is add the following&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">makeFrame&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">output&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">useSeeG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">arcGisProject&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">baseMapLayer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">frameFolderPath&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lineNumber&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">sys&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">_getframe&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">f_code&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">co_name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>to export a frame of this step in your method which is pushed to a timelapse video at the end of your process. Currently this tool only works for ArcGIS, which is annoyingly not open source, but I think is still the industry standard (I pay $100 annually for a full pro licence.) The GitHub repo for this tool is &lt;a href="https://github.com/samherreid/See-G/blob/main/See_G.ipynb" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;img src="canwellMethod.gif" width="2000" height="2000" />
&lt;script defer src="https://cdn.commento.io/js/commento.js">&lt;/script>
&lt;div id="commento">&lt;/div></description></item></channel></rss>